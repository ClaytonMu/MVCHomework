@using PagedList
@using PagedList.Mvc
@model IEnumerable<MVCHomework1.Models.客戶銀行資訊>

@{
    ViewBag.Title = "Index";
}

@section scripts
{
    <script>
        $(function () {
            $(".pagination a").on("click", function () {
                var href = $(this).attr("href");
                var pid = href.substring(href.indexOf('?page=') + 6);
                document.form1.page.value = pid;
                document.form1.submit();
                return false;
            });
        });
        function Sort(columnName, sortOrder) {
            $("#sortColumn").val(columnName);
            $("#sortOrder").val(sortOrder);
            document.form1.submit();
            return false;
        }

        function Export() {
            $("form[name='form1']").attr("action", "客戶銀行資訊/Export");
            document.form1.submit();
            $("form[name='form1']").attr("action", "客戶銀行資訊/Index");
            return false;
        }
    </script>
}

<h2>Index</h2>
    @Html.ActionLink("Create New", "Create")
    @using (Html.BeginForm("Index", "客戶銀行資訊", FormMethod.Get, new { name="form1" }))
    {
        <p>
            <table>
                <tr>
                    <td>
                        關鍵字:
                    </td>
                    <td>
                        @Html.TextBox("keyword", null, new { @class = "form-control" })
                    </td>
                    <td>
                        <input type="submit" value="查詢" class="btn btn-default" />
                    </td>
                    <td>
                        <input type="button" value="匯出" class="btn btn-default" onclick="return Export();" />
                    </td>
                </tr>
            </table>
        </p>

        @Html.Hidden("sortOrder")
        @Html.Hidden("sortColumn")
        @Html.Hidden("page")

        <table class="table">
            <tr>
                <th>
                    @Html.ActionLink("銀行名稱", "Index", null, new { onclick=string.Format("return Sort('{0}','{1}')", "銀行名稱", ViewBag.sortOrder) })
                </th>
                <th>
                    @Html.ActionLink("銀行代碼", "Index", null, new { onclick = string.Format("return Sort('{0}','{1}')", "銀行代碼", ViewBag.sortOrder) })
                </th>
                <th>
                    @Html.ActionLink("分行代碼", "Index", null, new { onclick = string.Format("return Sort('{0}','{1}')", "分行代碼", ViewBag.sortOrder) })
                </th>
                <th>
                    @Html.ActionLink("帳戶名稱", "Index", null, new { onclick = string.Format("return Sort('{0}','{1}')", "帳戶名稱", ViewBag.sortOrder) })
                </th>
                <th>
                    @Html.ActionLink("帳戶號碼", "Index", null, new { onclick = string.Format("return Sort('{0}','{1}')", "帳戶號碼", ViewBag.sortOrder) })
                </th>
                <th>
                    @Html.ActionLink("客戶名稱", "Index", null, new { onclick = string.Format("return Sort('{0}','{1}')", "客戶名稱", ViewBag.sortOrder) })
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.銀行名稱)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.銀行代碼)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.分行代碼)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.帳戶名稱)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.帳戶號碼)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.客戶資料.客戶名稱)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                    </td>
                </tr>
            }

        </table>
        @Html.PagedListPager(Model as IPagedList, p => Url.Action("Index", new { page = p }))
    }


